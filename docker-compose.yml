services:
  traefik:
    container_name: traefik
    image: traefik:v2.10
    command:
      - --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      # - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.email=$GATEWAY_EMAIL_LETSENCRYPT
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $VOLUMES_BASE_PATH/traefik_letsencrypt:/letsencrypt
    restart: unless-stopped

  whoami:
    container_name: whoami
    image: traefik/whoami
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.$GATEWAY_HOST`)
      - traefik.http.routers.whoami.entrypoints=web,websecure
      - traefik.http.routers.whoami.tls.certresolver=letsencrypt
      # - traefik.http.routers.whoami.middlewares=private@docker
      - traefik.http.services.whoami.loadbalancer.server.port=80
      - traefik.http.middlewares.private.ipwhitelist.sourcerange=$GATEWAY_IP_WHITELIST
    restart: unless-stopped

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome:latest
    command:
      - --no-check-update
      - -c
      - /opt/adguardhome/conf/AdGuardHome.yaml
      - -w
      - /opt/adguardhome/work
    entrypoint:
      - /opt/adguardhome/AdGuardHome
    ports:
      - 53:53/udp
      - 53:53/tcp
      - 853:853/udp
      - 853:853/tcp
    expose:
      - 80
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguardhome.rule=Host(`adguard.$GATEWAY_HOST`)
      - traefik.http.routers.adguardhome.entrypoints=web,websecure
      - traefik.http.routers.adguardhome.tls.certresolver=letsencrypt
      # - traefik.http.routers.adguardhome.middlewares=private@docker
      - traefik.http.services.adguardhome.loadbalancer.server.port=80
    volumes:
      - $VOLUMES_BASE_PATH/adguardhome_conf:/opt/adguardhome/conf
      - $VOLUMES_BASE_PATH/adguardhome_work:/opt/adguardhome/work
    working_dir: /opt/adguardhome/work
    restart: unless-stopped

  transmission:
    container_name: transmission
    image: lscr.io/linuxserver/transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Sao_Paulo
    volumes:
      - $VOLUMES_BASE_PATH/transmission_config:/config
      - $VOLUMES_BASE_PATH/transmission_data:/downloads
    ports:
      - 51413
    expose:
      - 9091
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.rule=Host(`transmission.$GATEWAY_HOST`)
      - traefik.http.routers.transmission.entrypoints=web,websecure
      - traefik.http.routers.transmission.tls.certresolver=letsencrypt
      - traefik.http.routers.transmission.middlewares=private@docker
      - traefik.http.services.transmission.loadbalancer.server.port=9091
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    entrypoint:
      - /init
    environment:
      - PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - LANG=C.UTF-8
      - S6_BEHAVIOUR_IF_STAGE2_FAILS=2
      - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
      - S6_CMD_WAIT_FOR_SERVICES=1
      - S6_SERVICES_READYTIME=50
      - WHEELS_LINKS=https://wheels.home-assistant.io/musllinux/
      - S6_SERVICES_GRACETIME=220000
    image: homeassistant/home-assistant:latest
    ports:
      - 5683:5683
      - 51827:51827
      - 5353:5353
      - 1900:1900
    expose:
      - 8123
    labels:
      - traefik.enable=true
      - traefik.http.routers.homeassistant.rule=Host(`ha.$GATEWAY_HOST`)
      - traefik.http.routers.homeassistant.entrypoints=web,websecure
      - traefik.http.routers.homeassistant.tls.certresolver=letsencrypt
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
    volumes:
      - $VOLUMES_BASE_PATH/homeassistant_config:/config
    working_dir: /config
    restart: unless-stopped

  jellyfin:
    container_name: jellyfin
    entrypoint:
      - /init
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - HOME=/root
      - LANGUAGE=en_US.UTF-8
      - LANG=en_US.UTF-8
      - TERM=xterm
      - S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0
      - S6_VERBOSITY=1
      - S6_STAGE2_HOOK=/docker-mods
      - VIRTUAL_ENV=/lsiopy
      - LSIO_FIRST_PARTY=true
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
    image: lscr.io/linuxserver/jellyfin:latest
    expose:
      - 8096
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.$GATEWAY_HOST`)
      - traefik.http.routers.jellyfin.entrypoints=web,websecure
      - traefik.http.routers.jellyfin.tls.certresolver=letsencrypt
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    volumes:
      - $VOLUMES_BASE_PATH/jellyfin_config:/config
      - $VOLUMES_BASE_PATH/jellyfin_data:/data
    restart: unless-stopped

  uptimekuma:
    container_name: uptimekuma
    command:
      - node
      - server/server.js
    entrypoint:
      - /usr/bin/dumb-init
      - --
      - extra/entrypoint.sh
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NODE_VERSION=16.20.2
      - YARN_VERSION=1.22.19
      - UPTIME_KUMA_IS_CONTAINER=1
    image: louislam/uptime-kuma:latest
    expose:
      - 3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptimekuma.rule=Host(`uptime.$GATEWAY_HOST`)
      - traefik.http.routers.uptimekuma.entrypoints=web,websecure
      - traefik.http.routers.uptimekuma.tls.certresolver=letsencrypt
      - traefik.http.services.uptimekuma.loadbalancer.server.port=3001
    volumes:
      - $VOLUMES_BASE_PATH/uptime-kuma_data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /app
    restart: unless-stopped

  netdata:
    container_name: netdata
    image: netdata/netdata:stable
    pid: host
    network_mode: host
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - $VOLUMES_BASE_PATH/netdata_config:/etc/netdata
      - $VOLUMES_BASE_PATH/netdata_lib:/var/lib/netdata
      - $VOLUMES_BASE_PATH/netdata_cache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NETDATA_CLAIM_TOKEN=$NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL=$NETDATA_CLAIM_URL
      - NETDATA_CLAIM_ROOMS=$NETDATA_CLAIM_ROOMS
    restart: unless-stopped
version: '3.6'
